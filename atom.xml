<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>平行世界</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://parallelworld.pw/"/>
  <updated>2018-01-23T02:34:22.395Z</updated>
  <id>http://parallelworld.pw/</id>
  
  <author>
    <name>Parallel World</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>命令行快速打开idea工程</title>
    <link href="http://parallelworld.pw/2018/01/22/%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BF%AB%E9%80%9F%E6%89%93%E5%BC%80idea%E5%B7%A5%E7%A8%8B/"/>
    <id>http://parallelworld.pw/2018/01/22/命令行快速打开idea工程/</id>
    <published>2018-01-22T09:20:07.000Z</published>
    <updated>2018-01-23T02:34:22.395Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>每次用 idea 打开 java 工程时，都要手动选择路径，特别麻烦。如果能在命令行中，<code>cd</code>到工程目录下，直接打开就好了。可惜 idea 本身并不提供这样的命令行工具，所以还是用脚本执行吧。</p></blockquote><p>在目录<code>~/.myscripts</code>中新建脚本文件<code>openIdea.sh</code>，内容如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/sh</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> check for where the latest version of IDEA is installed</span><br><span class="line">IDEA=`ls -1d /Applications/IntelliJ\ * | tail -n1`</span><br><span class="line">wd=`pwd`</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> were we given a directory?</span><br><span class="line">if [ -d "$1" ]; then</span><br><span class="line"><span class="meta">#</span>  echo "checking for things in the working dir given"</span><br><span class="line">  wd=`ls -1d "$1" | head -n1`</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> were we given a file?</span><br><span class="line">if [ -f "$1" ]; then</span><br><span class="line"><span class="meta">#</span>  echo "opening '$1'"</span><br><span class="line">  open -a "$IDEA" "$1"</span><br><span class="line">else</span><br><span class="line">    # let's check for stuff in our working directory.</span><br><span class="line">    pushd $wd &gt; /dev/null</span><br><span class="line"></span><br><span class="line">    # does our working dir have an .idea directory?</span><br><span class="line">    if [ -d ".idea" ]; then</span><br><span class="line"><span class="meta">#</span>      echo "opening via the .idea dir"</span><br><span class="line">      open -a "$IDEA" .</span><br><span class="line"></span><br><span class="line">    # is there an IDEA project file?</span><br><span class="line">    elif [ -f *.ipr ]; then</span><br><span class="line"><span class="meta">#</span>      echo "opening via the project file"</span><br><span class="line">      open -a "$IDEA" `ls -1d *.ipr | head -n1`</span><br><span class="line"></span><br><span class="line">    # Is there a pom.xml?</span><br><span class="line">    elif [ -f pom.xml ]; then</span><br><span class="line"><span class="meta">#</span>      echo "importing from pom"</span><br><span class="line">      open -a "$IDEA" "pom.xml"</span><br><span class="line"></span><br><span class="line">    # can't do anything smart; just open IDEA</span><br><span class="line">    else</span><br><span class="line"><span class="meta">#</span>      echo 'cbf'</span><br><span class="line">      open "$IDEA"</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    popd &gt; /dev/null</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>命令行执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 ~/.myscripts/openIdea.sh</span><br><span class="line">echo "alias idea='sh ~/.myscripts/openIdea.sh'" &gt;&gt; ~/.profile</span><br><span class="line">source ~/.profile</span><br></pre></td></tr></table></figure><h1 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h1><p><code>cd</code>到工程目录下，命令行执行<code>idea</code>即可。或者命令行直接执行<code>idea XXX</code>，<code>XXX</code>是项目路径。</p><h1 id="ref"><a href="#ref" class="headerlink" title="ref"></a>ref</h1><ul><li><a href="https://luyiisme.github.io/2017/04/12/idea-open-project/" target="_blank" rel="noopener">https://luyiisme.github.io/2017/04/12/idea-open-project/</a></li><li><a href="https://gist.github.com/chrisdarroch/7018927" target="_blank" rel="noopener">https://gist.github.com/chrisdarroch/7018927</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;每次用 idea 打开 java 工程时，都要手动选择路径，特别麻烦。如果能在命令行中，&lt;code&gt;cd&lt;/code&gt;到工程目录下，直接打开就好了。可惜 idea 本身并不提供这样的命令行工具，所以还是用脚本执行吧。&lt;/p&gt;
&lt;/blockquot
      
    
    </summary>
    
      <category term="工具" scheme="http://parallelworld.pw/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>tomcat-源码分析-3-HTTP 协议解析</title>
    <link href="http://parallelworld.pw/2018/01/04/tomcat-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-HTTP%20%E5%8D%8F%E8%AE%AE%E8%A7%A3%E6%9E%90/"/>
    <id>http://parallelworld.pw/2018/01/04/tomcat-源码分析-3-HTTP 协议解析/</id>
    <published>2018-01-04T03:01:14.000Z</published>
    <updated>2018-01-04T08:16:39.756Z</updated>
    
    <content type="html"><![CDATA[<p>Http11Protocol.Http11ConnectionHandler</p><p>AbstractProtocol process 方法<br>Http11Processor—processor</p><p>AbstractHttp11Processor—process</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Http11Protocol.Http11ConnectionHandler&lt;/p&gt;
&lt;p&gt;AbstractProtocol process 方法&lt;br&gt;Http11Processor—processor&lt;/p&gt;
&lt;p&gt;AbstractHttp11Processor—pro
      
    
    </summary>
    
      <category term="tomcat" scheme="http://parallelworld.pw/categories/tomcat/"/>
    
    
  </entry>
  
  <entry>
    <title>hexo-tips</title>
    <link href="http://parallelworld.pw/2017/12/28/hexo-tips/"/>
    <id>http://parallelworld.pw/2017/12/28/hexo-tips/</id>
    <published>2017-12-28T02:53:52.000Z</published>
    <updated>2017-12-28T03:02:21.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="引用站内文章，XXX是md的标题"><a href="#引用站内文章，XXX是md的标题" class="headerlink" title="引用站内文章，XXX是md的标题"></a>引用站内文章，XXX是md的标题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% post_link XXX %&#125;</span><br></pre></td></tr></table></figure><h4 id="引用图片。在-posts文件夹下创建博客同名文件夹，放入图片即可。引用时，要写图片的全称。"><a href="#引用图片。在-posts文件夹下创建博客同名文件夹，放入图片即可。引用时，要写图片的全称。" class="headerlink" title="引用图片。在_posts文件夹下创建博客同名文件夹，放入图片即可。引用时，要写图片的全称。"></a>引用图片。在<code>_posts</code>文件夹下创建博客同名文件夹，放入图片即可。引用时，要写图片的全称。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img XXX.png %&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;引用站内文章，XXX是md的标题&quot;&gt;&lt;a href=&quot;#引用站内文章，XXX是md的标题&quot; class=&quot;headerlink&quot; title=&quot;引用站内文章，XXX是md的标题&quot;&gt;&lt;/a&gt;引用站内文章，XXX是md的标题&lt;/h4&gt;&lt;figure class=&quot;hi
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>mac下端口被占用</title>
    <link href="http://parallelworld.pw/2017/12/27/mac%E4%B8%8B%E7%AB%AF%E5%8F%A3%E8%A2%AB%E5%8D%A0%E7%94%A8/"/>
    <id>http://parallelworld.pw/2017/12/27/mac下端口被占用/</id>
    <published>2017-12-27T09:54:33.000Z</published>
    <updated>2018-01-24T02:55:15.147Z</updated>
    
    <content type="html"><![CDATA[<p>mac 系统下查看 8080 端口是否被占用：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -i:8080</span><br></pre></td></tr></table></figure><p>结果显示：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">COMMAND   PID     USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME</span><br><span class="line">java    93394 huangwei   44u  IPv6 0x1261f7a7972f904b      0t0  TCP *:http-alt (LISTEN)</span><br></pre></td></tr></table></figure><p>看到一个 java 进程占用了 8080 端口。关闭该进程：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill -9 93394</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;mac 系统下查看 8080 端口是否被占用：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;
      
    
    </summary>
    
    
      <category term="shell" scheme="http://parallelworld.pw/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>tomcat源码分析-2-整体架构</title>
    <link href="http://parallelworld.pw/2017/12/25/tomcat-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-2-%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84/"/>
    <id>http://parallelworld.pw/2017/12/25/tomcat-源码分析-2-整体架构/</id>
    <published>2017-12-25T03:21:15.000Z</published>
    <updated>2018-01-04T07:20:46.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="总体架构"><a href="#总体架构" class="headerlink" title="总体架构"></a>总体架构</h1><p>tomcat 是 servlet 容器，提供 servlet 运行的环境。整体架构图如下：</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;总体架构&quot;&gt;&lt;a href=&quot;#总体架构&quot; class=&quot;headerlink&quot; title=&quot;总体架构&quot;&gt;&lt;/a&gt;总体架构&lt;/h1&gt;&lt;p&gt;tomcat 是 servlet 容器，提供 servlet 运行的环境。整体架构图如下：&lt;/p&gt;


      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>tomcat源码分析-1-准备工作</title>
    <link href="http://parallelworld.pw/2017/12/25/tomcat-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-1-%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/"/>
    <id>http://parallelworld.pw/2017/12/25/tomcat-源码分析-1-准备工作/</id>
    <published>2017-12-25T03:01:14.000Z</published>
    <updated>2018-01-04T07:21:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>公司服务器上的 tomcat 使用的版本是<code>7.0.42</code>，所以这里调试使用的源码版本也是<code>7.0.42</code>。</p><p><a href="http://archive.apache.org/dist/tomcat/tomcat-7/v7.0.42/src/" target="_blank" rel="noopener">tomcat 源码地址</a>。</p><p>一般使用 maven 来管理代码，所以我们要创建一个 maven 工程来承接 tomcat 源码。搭建步骤如下：</p><ol><li>idea 创建 maven 工程。不需要使用任何模版。</li><li>解压源码，将 java 文件夹的内容拷贝到 java 中，conf 和 webapps 文件夹拷贝到 resources 中。</li><li>找到<code>Bootstrap</code>类，直接启动 main 函数，发现会报很多错。此时我们需要修改 pom 文件，解决 tomcat 的包依赖。</li><li>修改 pom 文件，见下文。</li><li>再运行，发现还是有错。观察发现，需要设置 vm 启动参数。</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-Dcatalina.home=target/classes/</span><br><span class="line">-Dcatalina.base=target/classes/</span><br><span class="line">-Djava.endorsed.dirs=$&#123;catalina.base&#125;endorsed</span><br><span class="line">-Djava.io.tmpdir=$&#123;catalina.base&#125;temp</span><br><span class="line">-Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager</span><br><span class="line">-Djava.util.logging.config.file=$&#123;catalina.base&#125;conf/logging.properties</span><br></pre></td></tr></table></figure><p>如果觉得这样下载源码再配置很麻烦，可以直接到<a href="https://github.com/ParallelWorld/Tomcat7_0_42-maven" target="_blank" rel="noopener">Tomcat7_0_42-maven</a>clone 项目源码，按照 README 操作即可。</p><p>我们启动<code>Bootstrap</code>的<code>main</code>函数，控制台显示如下信息即为成功：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Dec 27, 2017 5:25:53 PM org.apache.coyote.AbstractProtocol start</span><br><span class="line">INFO: Starting ProtocolHandler [&quot;http-bio-8080&quot;]</span><br><span class="line">Dec 27, 2017 5:25:53 PM org.apache.coyote.AbstractProtocol start</span><br><span class="line">INFO: Starting ProtocolHandler [&quot;ajp-bio-8009&quot;]</span><br><span class="line">Dec 27, 2017 5:25:53 PM org.apache.catalina.startup.Catalina start</span><br><span class="line">INFO: Server startup in 2023 ms</span><br></pre></td></tr></table></figure><p>浏览器输入<code>http://localhost:8080/</code>，可以看到那只经典的猫。<br></p><h1 id="code"><a href="#code" class="headerlink" title="code"></a>code</h1><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>pw.parallelworld<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.ant<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ant<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.xml.rpc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.xml.rpc-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>wsdl4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>wsdl4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.eclipse.jdt.core.compiler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ecj<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>Tomcat<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.dtd<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xsd<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.6<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.6<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="ref"><a href="#ref" class="headerlink" title="ref"></a>ref</h1><ul><li><a href="http://kael-aiur.com/tomcat源码解读/使用maven搭建tomcat开发工程.html" target="_blank" rel="noopener">http://kael-aiur.com/tomcat源码解读/使用maven搭建tomcat开发工程.html</a></li><li><a href="http://m.blog.csdn.net/lucas421634258/article/details/49908323" target="_blank" rel="noopener">http://m.blog.csdn.net/lucas421634258/article/details/49908323</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;公司服务器上的 tomcat 使用的版本是&lt;code&gt;7.0.42&lt;/code&gt;，所以这里调试使用的源码版本也是&lt;code&gt;7.0.42&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://archive.apache.org/dist/tomcat/tomcat
      
    
    </summary>
    
      <category term="tomcat" scheme="http://parallelworld.pw/categories/tomcat/"/>
    
    
  </entry>
  
  <entry>
    <title>tomcat源码分析-0-开篇</title>
    <link href="http://parallelworld.pw/2017/12/22/tomcat-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-0-%E5%BC%80%E7%AF%87/"/>
    <id>http://parallelworld.pw/2017/12/22/tomcat-源码分析-0-开篇/</id>
    <published>2017-12-22T08:01:14.000Z</published>
    <updated>2018-01-04T07:23:02.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是-tomcat"><a href="#什么是-tomcat" class="headerlink" title="什么是 tomcat"></a>什么是 tomcat</h1><p><a href="https://zh.wikipedia.org/wiki/Apache_Tomcat" target="_blank" rel="noopener">tomcat 中文 wiki</a>。总的来说，tomcat 是一个支持 <strong>servlet 标准</strong> 的 <strong>web 容器</strong>。附上<a href="http://tomcat.apache.org/" target="_blank" rel="noopener">官网地址</a>。</p><h1 id="什么是容器"><a href="#什么是容器" class="headerlink" title="什么是容器"></a>什么是容器</h1><p>容器又名 container，为其内需要管理的对象的正常运行提供各种支持，包括但不限于生命周期、运行时机、资源分配、安全管理等。</p><p>当 web 服务器拿到一个请求时，不是直接交给 servlet 处理，而是先交给 web 容器。web 容器来决定如何处理该请求，相当于 web 请求的大管家。</p><p>tomcat 提供以下支持：</p><ul><li>通信支持：建立 socket、监听某个端口、创建流等；</li><li>生命周期管理：控制 servlet 生死，负责加载类、实例化和初始化 servlet、调用 servlet 方法及使 servlet 实例能够被垃圾回收；</li><li>线程支持：自动为接收的每个 servlet 请求创建一个新的 java 线程；</li><li>JSP 支持：对 JSP 请求动态生成 servlet 来处理。</li></ul><h1 id="什么是-servlet-标准"><a href="#什么是-servlet-标准" class="headerlink" title="什么是 servlet 标准"></a>什么是 servlet 标准</h1><p>servlet 是指实现 Servlet 接口的类。<a href="https://zh.wikipedia.org/wiki/Java_Servlet" target="_blank" rel="noopener">servlet 中文 wiki</a>。所谓的 servlet 标准就是所有 servlet 程序都必须实现该接口或者继承实现了该接口的类。</p><h1 id="tomcat-和-nginx、apache-的区别"><a href="#tomcat-和-nginx、apache-的区别" class="headerlink" title="tomcat 和 nginx、apache 的区别"></a>tomcat 和 nginx、apache 的区别</h1><p>nginx 和 apache 是 HTTP 服务器，只支持静态网页，而 tomcat 是支持 servlet 标准的服务器，支持动态内容生成。</p><h1 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h1><p>综上简单介绍了下 tomcat，接下来分阶段剖析 tomcat 源码。</p><p>以下是文章链接：</p><ul><li><a href="/2017/12/25/tomcat-源码分析-1-准备工作/" title="tomcat源码分析-1-准备工作">tomcat源码分析-1-准备工作</a></li><li><a href="/2017/12/25/tomcat-源码分析-2-整体架构/" title="tomcat源码分析-2-整体架构">tomcat源码分析-2-整体架构</a></li><li></li><li></li></ul><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul><li><a href="https://zh.wikipedia.org/wiki/Apache_Tomcat" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/Apache_Tomcat</a></li><li><a href="http://benlee.iteye.com/blog/375214" target="_blank" rel="noopener">http://benlee.iteye.com/blog/375214</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;什么是-tomcat&quot;&gt;&lt;a href=&quot;#什么是-tomcat&quot; class=&quot;headerlink&quot; title=&quot;什么是 tomcat&quot;&gt;&lt;/a&gt;什么是 tomcat&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki
      
    
    </summary>
    
      <category term="tomcat" scheme="http://parallelworld.pw/categories/tomcat/"/>
    
    
  </entry>
  
  <entry>
    <title>json转map精度丢失</title>
    <link href="http://parallelworld.pw/2017/11/20/json%E8%BD%ACmap%E7%B2%BE%E5%BA%A6%E4%B8%A2%E5%A4%B1/"/>
    <id>http://parallelworld.pw/2017/11/20/json转map精度丢失/</id>
    <published>2017-11-20T05:59:59.000Z</published>
    <updated>2017-12-27T09:54:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>支付返回结果（json 字符串）先转 map 再转对象时发生了精度丢失。字符串是<code>{&quot;id&quot;:188838035603143129}</code>。转成 map，再转成对象时，对象对应的 long 类型字段变成<code>188838035603143130</code>。使用的是 gson.fromJson(String, Class)。gson 版本是<br>2.5。</p><h1 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h1><p>debug 发现，在 string 转成 map 时，值已经发生了变化。gson 默认是将字符串中的<br>number 转换成 double 类型。原 string 串<code>188838035603143129</code>，map 中的 value 是<br>1.88838035603143136E17，此时已经发生了精度丢失。</p><p>对比看 188838035603143129 1.88838035603143136E17</p><h2 id="long-gt-double-精度丢失的原因"><a href="#long-gt-double-精度丢失的原因" class="headerlink" title="long-&gt;double 精度丢失的原因"></a>long-&gt;double 精度丢失的原因</h2><p>浮点型（float,double ）在内存中都是以科学计数法存储。以 double 双精度举例，内存中的结构是 1 11 52 符号位 指数位 尾数部分 2^52 = 4503599627370496，一共 16 位。</p><p>float 的精度是 6-7 位有效数字，6 位绝对是精确的。 double 的精度是 15-16 位有效数字，15 位是绝对精确的。 18 位的 id 字符串转成 double 时，存储的结果本该是<br>1.88838035603143129e17，但是由于精度问题，准确的只有 15 位也就是<br>888380356031431，后面的两位是截断后的结果，并不准确。对比实际调试时的结果：<br>1.88838035603143129e17— 理想情况 1.88838035603143136e17— 实际情况小数点后 15<br>位是准确的，再往后不再准确。</p><p>因此当 long 型的位数不大于 15 位时，先转 double，再转回 long，精度不会丢失。但是大于 15 位时，先转 double，再转回 long，精度会丢失。</p><h2 id="gson-转换-json-串中的-number-为-double-的原因"><a href="#gson-转换-json-串中的-number-为-double-的原因" class="headerlink" title="gson 转换 json 串中的 number 为 double 的原因"></a>gson 转换 json 串中的 number 为 double 的原因</h2><p>除了精度丢失的问题外，gson 将 json 串中的 long 转成 double 也是不合理的。</p><p>在 gson 的<code>ObjectTypeAdapter</code>类中可以看到：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> Object <span class="title">read</span><span class="params">(JsonReader in)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    JsonToken token = in.peek();</span><br><span class="line">    <span class="keyword">switch</span> (token) &#123;</span><br><span class="line">    <span class="keyword">case</span> BEGIN_ARRAY:</span><br><span class="line">      List&lt;Object&gt; list = <span class="keyword">new</span> ArrayList&lt;Object&gt;();</span><br><span class="line">      in.beginArray();</span><br><span class="line">      <span class="keyword">while</span> (in.hasNext()) &#123;</span><br><span class="line">        list.add(read(in));</span><br><span class="line">      &#125;</span><br><span class="line">      in.endArray();</span><br><span class="line">      <span class="keyword">return</span> list;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> BEGIN_OBJECT:</span><br><span class="line">      Map&lt;String, Object&gt; map = <span class="keyword">new</span> LinkedTreeMap&lt;String, Object&gt;();</span><br><span class="line">      in.beginObject();</span><br><span class="line">      <span class="keyword">while</span> (in.hasNext()) &#123;</span><br><span class="line">        map.put(in.nextName(), read(in));</span><br><span class="line">      &#125;</span><br><span class="line">      in.endObject();</span><br><span class="line">      <span class="keyword">return</span> map;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> STRING:</span><br><span class="line">      <span class="keyword">return</span> in.nextString();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> NUMBER:</span><br><span class="line">      <span class="keyword">return</span> in.nextDouble();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> BOOLEAN:</span><br><span class="line">      <span class="keyword">return</span> in.nextBoolean();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> NULL:</span><br><span class="line">      in.nextNull();</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>在 case NUMBER 这一行可以看到，数值型的数据都被简单地处理为 Double 型的值。</p><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><p>不经过 map 转换，直接将 json 串转换成对象。如果非要转成 map，那么可以使用其他的<br>json 库，比如 jackson 和 fastjson。</p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="http://www.jianshu.com/p/c51041a791bd" target="_blank" rel="noopener">http://www.jianshu.com/p/c51041a791bd</a><br><a href="http://www.zhyea.com/2016/11/13/gson-map-integer-double.html" target="_blank" rel="noopener">http://www.zhyea.com/2016/11/13/gson-map-integer-double.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h1&gt;&lt;p&gt;支付返回结果（json 字符串）先转 map 再转对象时发生了精度丢失。字符串是&lt;code&gt;{&amp;quot;id&amp;quot;:
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>浅谈 ifelse</title>
    <link href="http://parallelworld.pw/2017/09/06/%E6%B5%85%E8%B0%88ifelse/"/>
    <id>http://parallelworld.pw/2017/09/06/浅谈ifelse/</id>
    <published>2017-09-06T07:38:25.000Z</published>
    <updated>2017-12-22T07:59:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>同事发来他写的文章，<a href="https://mikefighting.github.io/2017/09/05/chat-if-else/" target="_blank" rel="noopener">此处是链接</a>。讲的是代码中<code>ifelse</code>的缺点，及改进方式。</p><p>同事视<code>ifelse</code>为洪水猛兽，在我看来其实不然。<code>ifelse</code>是所有计算机高级语言的基本语法或者说基本词汇，有了基本词汇才能有丰富的表达啊。<code>ifelse</code>的作用是进行语句的判断，从而改变程序流程。从某种意义上讲，<code>ifelse</code>是一种查找过程。找到符合条件的判断语句，然后执行对应的大括号内的代码。</p><p>文中提到，除了<code>ifelse</code>以外，还有<code>switch</code>，<code>map</code>（字典），<code>command</code>模式，多态等可以替代<code>ifelse</code>。这些方式可以说都是在查找，找到那个对的代码，然后执行。文中很推崇用高级的编程模式来做，比如<code>command</code>模式，多态等。但不是所有的情况都适合，而且大部分情况是没必要使用这些高级技巧的。</p><p>下面就具体罗列下每种情况的优缺点和适用条件。</p><p><strong>如果是数量较多，用<code>map</code>很合适，对应的是<code>command</code>模式，优点是查找速度快，易扩展，缺点是空间换时间，需要额外的存储空间，还需要定义多种类。量少时，可以用枚举，优点是清晰明了，缺点是要定义额外的枚举类型。量更少时可以用<code>ifelse</code>或者<code>switch</code>，优点是写起来很符合直觉，写得快，缺点是代码看起来比较多，杂。</strong></p><p>具体实施时，就需要编码者根据不同实际情况进行选择了。这个其实是个经验问题。再比如，最近我在练乒乓球，主要练习拧拉，虽然这个技术很厉害，但是不是所有情况都适合，对方搓你的正手底线，你还用拧就不合适了，这个时候直接拉球就好了。</p><p>最后，用白居易的一个典故来表达我编码的愿景，真心希望我写的代码都能够<a href="https://baike.baidu.com/item/老妪能解" target="_blank" rel="noopener">老妪能解</a>的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;同事发来他写的文章，&lt;a href=&quot;https://mikefighting.github.io/2017/09/05/chat-if-else/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;此处是链接&lt;/a&gt;。讲的是代码中&lt;code&gt;ifelse&lt;/
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Java读写excel文件</title>
    <link href="http://parallelworld.pw/2017/09/06/Java%E8%AF%BB%E5%86%99excel%E6%96%87%E4%BB%B6/"/>
    <id>http://parallelworld.pw/2017/09/06/Java读写excel文件/</id>
    <published>2017-09-06T05:59:59.000Z</published>
    <updated>2017-12-22T07:59:14.501Z</updated>
    
    <content type="html"><![CDATA[<p>最近做了一个退款的需求，根据 XXX 提供的 userid，orderid，refundmoney 等数据调用相应的接口退款，数据给的形式不是 txt，而是 excel 表格的形式。之前没做过，在此记录下。</p><p>选用的库是 Apache POI，提供对 excel 的读写功能的 java api。</p><ul><li>HSSF：excel2003（.xls）</li><li>XSSF：excel2007 及以后（.xlsx）</li></ul><p>对应的 maven 依赖是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;poi&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.14&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;poi-ooxml&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.14&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="XLSReader"><a href="#XLSReader" class="headerlink" title="XLSReader"></a>XLSReader</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.poi.hssf.usermodel.HSSFWorkbook;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Row;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Sheet;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Workbook;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFWorkbook;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">XLSReader</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;List&gt; <span class="title">readExcel</span><span class="params">(String url, <span class="keyword">int</span> sheetIndex)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 从xlsx/xls文件创建输入流</span></span><br><span class="line">        FileInputStream fis = <span class="keyword">new</span> FileInputStream(url);</span><br><span class="line">        List list = <span class="keyword">new</span> ArrayList();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建工作薄Workbook</span></span><br><span class="line">        Workbook wb = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (url.toLowerCase().endsWith(<span class="string">"xlsx"</span>)) &#123; <span class="comment">// 读取2007版，以.xlsx结尾</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                wb = <span class="keyword">new</span> XSSFWorkbook(fis);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (url.toLowerCase().endsWith(<span class="string">"xls"</span>)) &#123; <span class="comment">// 读取2003版，以.xls结尾</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                wb = <span class="keyword">new</span> HSSFWorkbook(fis);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Sheet sheet = wb.getSheetAt(sheetIndex);</span><br><span class="line">        Row row;</span><br><span class="line">        String cell;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = sheet.getFirstRowNum(); i &lt; sheet.getPhysicalNumberOfRows(); i++) &#123;</span><br><span class="line">            <span class="comment">// 循环行数</span></span><br><span class="line">            row = sheet.getRow(i);</span><br><span class="line">            List cells = <span class="keyword">new</span> ArrayList();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = row.getFirstCellNum(); j &lt; row.getPhysicalNumberOfCells(); j++) &#123;</span><br><span class="line">                <span class="comment">// 循环列数</span></span><br><span class="line">                cell = row.getCell(j).toString();</span><br><span class="line">                cells.add(cell);</span><br><span class="line">            &#125;</span><br><span class="line">            list.add(cells);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="XLSWriter"><a href="#XLSWriter" class="headerlink" title="XLSWriter"></a>XLSWriter</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">XLSWriter</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeToExcel</span><span class="params">(List&lt;List&gt; list, String url)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 创建工作薄</span></span><br><span class="line">        XSSFWorkbook workBook = <span class="keyword">new</span> XSSFWorkbook();</span><br><span class="line">        <span class="comment">// 在工作薄中创建一工作表</span></span><br><span class="line">        XSSFSheet sheet = workBook.createSheet();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> rowIndex = <span class="number">0</span>; rowIndex &lt; list.size(); rowIndex++) &#123;</span><br><span class="line">            <span class="comment">// 在指定的索引处创建一行</span></span><br><span class="line">            XSSFRow row = sheet.createRow(rowIndex);</span><br><span class="line">            List cells = list.get(rowIndex);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> cellIndex = <span class="number">0</span>; cellIndex &lt; cells.size(); cellIndex++) &#123;</span><br><span class="line">                <span class="comment">// 在指定的索引处创建一列（单元格）</span></span><br><span class="line">                XSSFCell code = row.createCell(cellIndex);</span><br><span class="line">                <span class="comment">// 定义单元格为字符串类型</span></span><br><span class="line">                code.setCellType(XSSFCell.CELL_TYPE_STRING);</span><br><span class="line">                <span class="comment">// 输入cell内容</span></span><br><span class="line">                code.setCellValue(cells.get(cellIndex).toString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 新建输出流并把相应的excel文件存盘</span></span><br><span class="line">        FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(url);</span><br><span class="line">        workBook.write(fos);</span><br><span class="line">        fos.flush();</span><br><span class="line">        <span class="comment">//操作结束，关闭流</span></span><br><span class="line">        fos.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul><li><a href="http://zhoushijie5230.iteye.com/blog/2114964" target="_blank" rel="noopener">http://zhoushijie5230.iteye.com/blog/2114964</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近做了一个退款的需求，根据 XXX 提供的 userid，orderid，refundmoney 等数据调用相应的接口退款，数据给的形式不是 txt，而是 excel 表格的形式。之前没做过，在此记录下。&lt;/p&gt;
&lt;p&gt;选用的库是 Apache POI，提供对 excel
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>如何让 Cocoapods 不同版本共存</title>
    <link href="http://parallelworld.pw/2017/01/04/switch-version-of-cocoapods/"/>
    <id>http://parallelworld.pw/2017/01/04/switch-version-of-cocoapods/</id>
    <published>2017-01-04T02:24:15.000Z</published>
    <updated>2018-01-24T02:56:08.833Z</updated>
    
    <content type="html"><![CDATA[<p>公司目前用的 cocoapods 版本是 0.35，而平时自己研究别人源码用的都是 1.0 以上的版本。如果同时安装两个版本，再使用 <code>pod</code> 命令时，总是产生冲突，容易出错。此时两个版本的 cocoapods 会安装在同一个环境下，所以考虑如何让两个版本的 ，甚至多个版本的 cocoapods 安装在不同的环境下，那么版本共存和切换就有了可能性。</p><h1 id="渔"><a href="#渔" class="headerlink" title="渔"></a>渔</h1><p>首先我们从 cocoapods 是如何安装的入手分析。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gem install cocoapods</span><br></pre></td></tr></table></figure><p>这段代码是最基本的安装命令，执行后会安装最新的 cocoapods 版本。注意到，用的是 gem 命令，gem 又是个啥呢？</p><h2 id="gem"><a href="#gem" class="headerlink" title="gem"></a>gem</h2><p><strong>gem 是封装起来的 Ruby 应用程序或代码库，终端使用的 gem 命令，是指通过 RubyGems 管理 Gem 包。也就是说 cocoapods 是一个 Ruby 代码包，用 gem 来安装。</strong></p><p>如果有个管理工具，可以安装和管理多个 Ruby 环境，在每个 Ruby 环境中，用 gem 安装 cocoapods，不就实现了不同版本的 cocoapods 共存了吗？ruby 刚好有个版本管理工具，可以做到这一点。</p><h2 id="RVM"><a href="#RVM" class="headerlink" title="RVM"></a>RVM</h2><p><strong>RVM 用于帮助你安装 Ruby 环境，帮你管理多个 Ruby 环境，帮你管理你开发的每个 Ruby 应用使用机器上哪个 Ruby 环境。</strong></p><p>总结下来就是，使用 RVM 安装不同版本的 Ruby 环境，在每个环境中安装 cocoapods，此时每个 Ruby 环境中的 cocoapods 可以不同。</p><p>渔完了，接下来是鱼。</p><h1 id="鱼"><a href="#鱼" class="headerlink" title="鱼"></a>鱼</h1><p>需要 cocoapods 版本切换的你，肯定在机子上已经安装好了某个版本的 cocoapods，为了避免引起冲突，先把机器上的 cocoapods 卸载干净。</p><h2 id="卸载当前机器上的-cocoapods"><a href="#卸载当前机器上的-cocoapods" class="headerlink" title="卸载当前机器上的 cocoapods"></a>卸载当前机器上的 cocoapods</h2><ol><li>终端输入 <code>gem list</code> ，查看当前 gem 下安装的所有包</li><li>输入命令 <code>sudo gem uninstall XXX</code> ，XXX 是你要卸载的包名</li><li>卸载步骤 1 中所有 cocoapods 开头的包</li><li>反复执行前面几步，直到所有的 cocoapods 开头的包都已经被卸载了</li></ol><h2 id="安装-rvm-和多个版本的-Ruby"><a href="#安装-rvm-和多个版本的-Ruby" class="headerlink" title="安装 rvm 和多个版本的 Ruby"></a>安装 rvm 和多个版本的 Ruby</h2><ol><li>安装 rvm，使用命令 <code>curl -L get.rvm.io | bash -s stable &amp;&amp; source ~/.rvm/scripts/rvm</code></li><li>到 <a href="">https://rvm.io/binaries</a> 下载相应版本的 ruby 包</li><li>执行 <code>rvm mount ~/Downloads/ruby-2.2.3.tar.bz2</code> ，其中 ruby-2.2.3.tar.bz2 是你下载好的 ruby 包，按自己的需求可以多安装几个版本</li><li>执行 <code>rvm list</code> 可查看当前安装的 ruby 版本列表，执行 <code>rvm use &lt;Version&gt;</code> 可切换到不同版本的 ruby</li><li>在某个 ruby 版本下，安装指定版本的 cocoapods，参见下面内容</li></ol><h2 id="如何正确的安装-cocoapods"><a href="#如何正确的安装-cocoapods" class="headerlink" title="如何正确的安装 cocoapods"></a>如何正确的安装 cocoapods</h2><p>如果你是 mac 的 10.11 及以上系统，需要使用命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gem install cocoapods -v &lt;Version&gt; -n /usr/local/bin</span><br></pre></td></tr></table></figure><p>否则的话使用命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gem install cocoapods -v &lt;Version&gt;</span><br></pre></td></tr></table></figure><h2 id="我安装的版本对应表"><a href="#我安装的版本对应表" class="headerlink" title="我安装的版本对应表"></a>我安装的版本对应表</h2><p>由于 ruby 版本不同，可安装的 cocoapods 版本也就不同，下面是我已经验证可行的版本对应关系。</p><table><thead><tr><th style="text-align:center">ruby version</th><th style="text-align:center">cocoapods version</th></tr></thead><tbody><tr><td style="text-align:center">2.1.0</td><td style="text-align:center">0.35</td></tr><tr><td style="text-align:center">2.2.0</td><td style="text-align:center">0.39</td></tr><tr><td style="text-align:center">2.2.3</td><td style="text-align:center">1.0.1</td></tr></tbody></table><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul><li><a href="">https://henter.me/post/ruby-rvm-gem-rake-bundle-rails.html</a></li><li><a href="">http://manongs.com/a/GQOrmm</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;公司目前用的 cocoapods 版本是 0.35，而平时自己研究别人源码用的都是 1.0 以上的版本。如果同时安装两个版本，再使用 &lt;code&gt;pod&lt;/code&gt; 命令时，总是产生冲突，容易出错。此时两个版本的 cocoapods 会安装在同一个环境下，所以考虑如何让两
      
    
    </summary>
    
    
      <category term="tool" scheme="http://parallelworld.pw/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>搭建博客（Github+Hexo+文章管理）</title>
    <link href="http://parallelworld.pw/2016/12/30/how-to-build-my-personal-website/"/>
    <id>http://parallelworld.pw/2016/12/30/how-to-build-my-personal-website/</id>
    <published>2016-12-30T11:23:15.000Z</published>
    <updated>2018-01-24T02:55:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天刚申请了个域名，就迫不及待的建了个人博客。下面是建立过程：</p><h1 id="1-新建自己的-Github-Page"><a href="#1-新建自己的-Github-Page" class="headerlink" title="1. 新建自己的 Github Page"></a>1. 新建自己的 Github Page</h1><p>在自己的 Github 上新建一个 repository，取名<code>yourusername.github.io</code>。<code>README</code>和<code>gitignore</code>文件不用添加，所有选择默认即可。建好之后，是一个空的仓库，后面会用来保存生成的博客网页。</p><h1 id="2-安装-Hexo"><a href="#2-安装-Hexo" class="headerlink" title="2. 安装 Hexo"></a>2. 安装 Hexo</h1><p>由于 Hexo 这个博客框架更新很快，网上的很多相关博客其实都已经过时，所以还是参考<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener"> Hexo 官网</a>的教程为准。</p><p>主要命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blog</span><br><span class="line">cd blog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>除此之外，还需要修改<code>blog</code>文件夹下的<code>_config.yml</code>配置文件，关联之前创建的仓库。命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// 修改前</span><br><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type:</span><br><span class="line"></span><br><span class="line">// 修改后</span><br><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/yourusername/yourusername.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p><code>type</code>、<code>repo</code>和<code>branch</code>之前一定要有两个空格，否则会报错。</p><p>为了能够识别<code>git</code>，还需要安装<code>hexo-deployer-git</code>包，命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>到此就可以本地写博客，并且可以发布到<code>https://github.com/yourusername/yourusername.github.io</code>网页上了。</p><h1 id="3-博客文章管理"><a href="#3-博客文章管理" class="headerlink" title="3. 博客文章管理"></a>3. 博客文章管理</h1><p>除了上班的闲暇时间写写东西外，回家的时候可能也会写点，这时候就遇到了文章的同步问题。既然 Hexo 生成的博客网页可以存放在 github 上，那博客的文章为什么不能呢？所以新建一个仓库，取名<code>blog</code>，专门用来存放博客的源文件。</p><p>但是有个问题，就是有些文件是我们在生成博客网页的时候自动生成的。这些其实没有必要同步，而且每次都会重新生成，容易引起冲突。所以我们需要添加一个<code>.gitignore</code>文件，内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br></pre></td></tr></table></figure><p>当在新机器上写博客时，只需要把源文件 clone 下来，输入命令<code>npm install</code>即可。</p><h1 id="4-安装-maupassant-主题"><a href="#4-安装-maupassant-主题" class="headerlink" title="4. 安装 maupassant 主题"></a>4. 安装 maupassant 主题</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cd blog</span><br><span class="line">git clone https://github.com/tufu9441/maupassant-hexo.git themes/maupassant</span><br><span class="line">npm install hexo-renderer-jade --save</span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org  # 使用taobao源的cnpm代替官方的npm</span><br><span class="line">cnpm install hexo-renderer-sass --save   # 安装hexo-renderer-sass插件</span><br><span class="line"><span class="meta">#</span> 修改blog目录下，而不是主题目录下的_config.yml</span><br><span class="line">theme: landscape-&gt;theme: maupassant</span><br><span class="line"></span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul><li><a href="http://www.jianshu.com/p/834d7cc0668d" target="_blank" rel="noopener">http://www.jianshu.com/p/834d7cc0668d</a></li><li><a href="https://hexo.io/zh-cn" target="_blank" rel="noopener">https://hexo.io/zh-cn</a></li><li><a href="https://hexo.io/zh-cn/docs/deployment.html" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/deployment.html</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天刚申请了个域名，就迫不及待的建了个人博客。下面是建立过程：&lt;/p&gt;
&lt;h1 id=&quot;1-新建自己的-Github-Page&quot;&gt;&lt;a href=&quot;#1-新建自己的-Github-Page&quot; class=&quot;headerlink&quot; title=&quot;1. 新建自己的 Github
      
    
    </summary>
    
    
      <category term="tool" scheme="http://parallelworld.pw/tags/tool/"/>
    
  </entry>
  
</feed>
